<div class="max-w-7xl mx-auto">
  <!-- Header -->
  <div class="mb-8">
    <h1 class="text-4xl font-bold text-gray-900 mb-3">üèÜ Leaderboard</h1>
    <p class="text-gray-600 text-lg">Track the top performers and their achievements</p>
  </div>

  <!-- Search and Export Controls -->
  <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg shadow-sm border border-blue-200 p-6 mb-6">
    <div class="flex flex-col sm:flex-row gap-4 items-center justify-between">
      <!-- Search Form -->
      <div class="flex-1 max-w-md">
        <%= form_with url: leaderboards_path, method: :get, local: true, class: "flex gap-3 items-center" do |form| %>
          <div class="flex-1">
            <%= form.select :search, 
                options_for_select([['All Players', '']] + Leaderboard.pluck(:name).map { |name| [name, name] }), 
                { selected: params[:search], prompt: 'Search by player name...' }, 
                { id: 'player-select', class: 'w-full h-12 px-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 shadow-sm bg-white text-gray-900 placeholder-gray-500 font-medium' } %>
          </div>
          <%= form.submit "üîç Search", class: "h-12 px-6 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 font-semibold shadow-md transition-all duration-200 transform hover:scale-105 whitespace-nowrap" %>
        <% end %>
      </div>

      <!-- Export Button -->
      <div class="flex gap-2">
                  <button onclick="exportData()" class="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:ring-2 focus:ring-green-500 focus:ring-offset-2 flex items-center gap-2 font-medium shadow-sm transition-colors duration-200">
            <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            Download
          </button>
      </div>
    </div>
  </div>

  <!-- Leaderboard Table -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gradient-to-r from-blue-50 to-indigo-50">
          <tr>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider">üèÖ Rank</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider">üë§ Player</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider">‚≠ê XPs</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider">üê¶ Twitter</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider">üí¨ Discord</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @leaderboards.each do |leaderboard| %>
            <tr class="hover:bg-gray-50">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <span class="inline-flex items-center justify-center w-10 h-10 rounded-full text-sm font-bold
                    <%= case leaderboard.rank
                        when 1 then 'bg-gradient-to-r from-yellow-400 to-yellow-500 text-white shadow-lg'
                        when 2 then 'bg-gradient-to-r from-gray-400 to-gray-500 text-white shadow-lg'
                        when 3 then 'bg-gradient-to-r from-orange-400 to-orange-500 text-white shadow-lg'
                        else 'bg-gradient-to-r from-blue-400 to-blue-500 text-white shadow-md'
                        end %>">
                    <%= leaderboard.rank %>
                  </span>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10">
                    <% if leaderboard.image_url.present? %>
                      <%= image_tag leaderboard.image_url, class: "h-10 w-10 rounded-full object-cover" %>
                    <% else %>
                      <div class="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                        <svg class="h-6 w-6 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                      </div>
                    <% end %>
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900"><%= leaderboard.name %></div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900 font-bold text-lg"><%= number_with_delimiter(leaderboard.xps) %></div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900"><%= leaderboard.twitter %></div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900"><%= leaderboard.discord %></div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Pagination -->
  <% if @leaderboards.respond_to?(:current_page) %>
    <div class="mt-8 bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
        <div class="flex items-center gap-4">
          <div class="text-sm text-gray-700">
            üìä Showing <span class="font-semibold"><%= (@leaderboards.current_page - 1) * @leaderboards.limit_value + 1 %></span> to 
            <span class="font-semibold"><%= [@leaderboards.current_page * @leaderboards.limit_value, @leaderboards.total_count].min %></span> of 
            <span class="font-semibold"><%= @leaderboards.total_count %></span> players
          </div>
          
          <!-- Rows per page selector -->
          <div class="flex items-center gap-2">
            <label for="per_page" class="text-sm text-gray-700">Show:</label>
            <%= select_tag :per_page, 
                options_for_select([['10', 10], ['25', 25], ['50', 50], ['100', 100]], params[:per_page] || 10), 
                { id: 'per-page-select', class: 'text-sm border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500' } %>
            <span class="text-sm text-gray-700">per page</span>
          </div>
        </div>
        
        <div class="flex items-center">
          <%= paginate @leaderboards, theme: 'tailwind' %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<script>
// Leaderboard JavaScript functionality
document.addEventListener("DOMContentLoaded", function () {
  initializeChosen();
  initializePerPageSelector();
});

function initializeChosen() {
  if (
    typeof jQuery !== "undefined" &&
    typeof jQuery.fn.chosen !== "undefined"
  ) {
    $("#player-select").chosen({
      placeholder_text_single: "Search by player name...",
      no_results_text: "No players found",
      search_contains: true,
      width: "100%",
      allow_single_deselect: true,
    });

    // Custom styling for Chosen.js
    $("<style>")
      .prop("type", "text/css")
      .html(
        `
        .chosen-container-single {
          height: 48px !important;
          line-height: 48px !important;
        }
        .chosen-container-single .chosen-single {
          background: linear-gradient(to right, #ffffff, #f8fafc) !important;
          border: 1px solid #d1d5db !important;
          border-radius: 0.5rem !important;
          height: 48px !important;
          line-height: 48px !important;
          padding: 0 1rem !important;
          font-weight: 500 !important;
          color: #374151 !important;
          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05) !important;
          transition: all 0.2s ease !important;
          display: flex !important;
          align-items: center !important;
        }
        .chosen-container-single .chosen-single:hover {
          border-color: #3b82f6 !important;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
        }
        .chosen-container-single.chosen-container-active .chosen-single {
          border-color: #3b82f6 !important;
          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1) !important;
        }
        .chosen-container-single .chosen-single span {
          line-height: 48px !important;
          height: 48px !important;
          display: flex !important;
          align-items: center !important;
        }
        .chosen-container-single .chosen-single div {
          height: 48px !important;
          line-height: 48px !important;
          display: flex !important;
          align-items: center !important;
        }
        .chosen-container .chosen-drop {
          border: 1px solid #d1d5db !important;
          border-radius: 0.5rem !important;
          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1) !important;
          margin-top: 0.25rem !important;
        }
        .chosen-container .chosen-results li {
          padding: 0.75rem 1rem !important;
          font-weight: 500 !important;
          color: #374151 !important;
          line-height: 1.5 !important;
        }
        .chosen-container .chosen-results li:hover {
          background: linear-gradient(to right, #eff6ff, #dbeafe) !important;
          color: #1e40af !important;
        }
        .chosen-container .chosen-results li.highlighted {
          background: linear-gradient(to right, #3b82f6, #2563eb) !important;
          color: white !important;
        }
        .chosen-container .chosen-search input {
          border: 1px solid #d1d5db !important;
          border-radius: 0.375rem !important;
          padding: 0.5rem 0.75rem !important;
          font-weight: 500 !important;
          height: 36px !important;
        }
        .chosen-container .chosen-search input:focus {
          border-color: #3b82f6 !important;
          box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1) !important;
        }
        `
      )
      .appendTo("head");
  }
}

function initializePerPageSelector() {
  const perPageSelect = document.getElementById("per-page-select");
  if (perPageSelect) {
    perPageSelect.addEventListener("change", function () {
      const currentUrl = new URL(window.location);
      currentUrl.searchParams.set("per_page", this.value);
      currentUrl.searchParams.delete("page"); // Reset to first page when changing per_page
      window.location.href = currentUrl.toString();
    });
  }
}

// Export data function
function exportData() {
  const searchParams = new URLSearchParams(window.location.search);
  const search = searchParams.get("search") || "";

  fetch(`/leaderboards/export.json?search=${encodeURIComponent(search)}`)
    .then((response) => response.json())
    .then((data) => {
      const blob = new Blob([JSON.stringify(data, null, 2)], {
        type: "application/json",
      });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download =
        "leaderboard_data_" + new Date().toISOString().split("T")[0] + ".json";
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch((error) => {
      console.error("Export failed:", error);
      alert("Export failed. Please try again.");
    });
}

// Make exportData available globally
window.exportData = exportData;
</script>
